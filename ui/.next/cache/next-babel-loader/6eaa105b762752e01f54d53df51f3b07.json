{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\nimport ChatComponent from \"../../components/chat/chatComponent\";\nimport CreatePost from \"../../components/createPost/createPostComponent\";\nimport Cover from \"../../components/cover/coverComponent\";\nimport { homeStyle } from './homeStyle';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PublicIcon from '@material-ui/icons/Public';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ImageList from '@material-ui/core/ImageList';\nimport ImageListItem from '@material-ui/core/ImageListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport ProfileTabComponent from '../../components/profileTab/profileTabComponent';\nimport ProfileInfoComponent from '../../components/profileInfo/profileInfoComponent';\n\nvar homeComponent = /*#__PURE__*/function (_Component) {\n  _inherits(homeComponent, _Component);\n\n  var _super = _createSuper(homeComponent);\n\n  function homeComponent(props) {\n    var _this;\n\n    _classCallCheck(this, homeComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawerOpen\", function () {\n      _this.setState({\n        drawerOpen: !_this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawerClose\", function () {\n      _this.setState({\n        drawerOpen: _this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawerToggle\", function () {\n      _this.setState({\n        isMenuOpen: !_this.state.isMenuOpen\n      });\n    });\n\n    _this.state = {\n      menuId: 'primary-search-account-menu',\n      mobileMenuId: 'primary-search-account-menu-mobile',\n      isMenuOpen: false,\n      drawerOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(homeComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme,\n          posts = _this$props.posts;\n\n      var renderMenu = __jsx(Menu, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        id: this.state.menuId,\n        keepMounted: true,\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: this.state.isMenuOpen,\n        onClose: this.handleDrawerToggle\n      }, __jsx(MenuItem, null, \"Profile\"));\n\n      var about = __jsx(Card, {\n        className: classes.card\n      }, __jsx(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"h2\",\n        style: {\n          fontSize: '1.0625rem',\n          padding: '14px',\n          fontWeight: 'bold',\n          color: '#000'\n        }\n      }, \"About\"), __jsx(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"h3\",\n        style: {\n          marginTop: '14px',\n          padding: '14px',\n          color: '#000'\n        }\n      }, \"This group is for everyone who likes mountains, hiking, nature and outdoors. The beauty of mountains revealed by pictures and videos ... share your pictures and have a good time!\"), __jsx(List, {\n        component: \"nav\",\n        \"aria-labelledby\": \"nested-list-subheader\"\n      }, __jsx(ListItem, null, __jsx(ListItemIcon, {\n        style: {\n          minWidth: '34px',\n          marginTop: '-19px'\n        }\n      }, __jsx(PublicIcon, {\n        style: {\n          fontSize: '21px',\n          color: '#000'\n        }\n      })), __jsx(ListItemText, {\n        primary: \"Public\",\n        secondary: \"Anyone can see who's in the group and what they post.\"\n      })), __jsx(ListItem, null, __jsx(ListItemIcon, {\n        style: {\n          minWidth: '34px',\n          marginTop: '-19px'\n        }\n      }, __jsx(VisibilityIcon, {\n        style: {\n          fontSize: '21px',\n          color: '#000'\n        }\n      })), __jsx(ListItemText, {\n        primary: \"Visible\",\n        secondary: \"Anyone can find this group.\"\n      })), __jsx(ListItem, null, __jsx(ListItemIcon, {\n        style: {\n          minWidth: '34px'\n        }\n      }, __jsx(PeopleAltIcon, {\n        style: {\n          fontSize: '21px',\n          color: '#000'\n        }\n      })), __jsx(ListItemText, {\n        primary: \"General\"\n      }))));\n\n      var media = __jsx(Card, {\n        className: classes.card\n      }, __jsx(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"h2\",\n        style: {\n          fontSize: '1.0625rem',\n          padding: '14px',\n          fontWeight: 'bold',\n          color: '#000'\n        }\n      }, \"Recent media\"), __jsx(ImageList, {\n        rowHeight: 180,\n        className: classes.imageList\n      }, __jsx(ImageListItem, {\n        key: \"Subheader\",\n        cols: 2,\n        style: {\n          height: 'auto'\n        }\n      }, __jsx(ListSubheader, {\n        component: \"div\"\n      }, \"December\")), __jsx(ImageListItem, null, __jsx(\"img\", {\n        src: \"https://upload.wikimedia.org/wikipedia/commons/0/08/Iguana_%28249529699%29.jpeg\"\n      }))), \"I\"); // const peopleList = (\n      //     <Card className={classes.card}>\n      //         <Typography\n      //             className={classes.peopleHeader}\n      //             variant={\"h6\"}\n      //         >\n      //             Peoples\n      //             <Divider light className={classes.divider} />\n      //         </Typography>\n      //         <List className={classes.rootPeople}>\n      //             {\n      //                 this.props.users.map(function(item,i){\n      //               return (\n      //                       <div key={i}>\n      //                           <ListItem alignItems=\"flex-start\">\n      //                               <ListItemAvatar>\n      //                                   <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\n      //                               </ListItemAvatar>\n      //                               <ListItemText\n      //                                   secondary={\n      //                                       <React.Fragment>\n      //                                           <Typography\n      //                                               component=\"span\"\n      //                                               variant=\"body2\"\n      //                                               className={classes.peopleUserName}\n      //                                               color=\"textPrimary\"\n      //                                           >\n      //                                               {item.username}\n      //                                           </Typography>\n      //                                       </React.Fragment>\n      //                                   }\n      //                               />\n      //                           </ListItem>\n      //                           <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\n      //                       </div>\n      //                   )\n      //                 })\n      //             }\n      //         </List>\n      //     </Card>\n      // );\n      // const drawer =(\n      //     <Drawer\n      //         classes={{\n      //             paper: classes.drawerPaperLarge,\n      //         }}\n      //         variant=\"persistent\"\n      //         anchor=\"left\"\n      //         open={this.state.drawerOpen}\n      //         ModalProps={{\n      //             keepMounted: true, // Better open performance on mobile.\n      //         }}\n      //     >\n      //         <div className={classes.drawerHeader}>\n      //             <IconButton onClick={()=>this.handleDrawerClose()}>\n      //                 {/*{theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}*/}\n      //             </IconButton>\n      //         </div>\n      //         <List>\n      //             {['Home', 'Profile', 'People'].map((text, index) => (\n      //                 <ListItem button key={text}>\n      //                     <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n      //                     <ListItemText primary={text} />\n      //                 </ListItem>\n      //             ))}\n      //         </List>\n      //     </Drawer>\n      // );\n\n\n      var cover = __jsx(\"main\", {\n        className: classes.content\n      }, __jsx(Cover, null), __jsx(ProfileInfoComponent, null), __jsx(\"hr\", {\n        style: {\n          width: '65%',\n          color: '#eee'\n        }\n      }), __jsx(ProfileTabComponent, null));\n\n      var profileInfo = __jsx(\"main\", {\n        className: classes.content\n      });\n\n      return __jsx(\"div\", {\n        className: classes.root\n      }, __jsx(HomeHeader, {\n        onToggleDrawer: this.handleDrawerOpen\n      }), __jsx(Grid, {\n        container: true,\n        style: {\n          paddingTop: '60px !important'\n        },\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        lg: 12,\n        style: {\n          background: '#fff',\n          marginTop: '-45'\n        }\n      }, cover)), __jsx(Grid, {\n        container: true,\n        style: {\n          paddingTop: '60px !important',\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 5,\n        lg: 5,\n        className: \"profileInfo\"\n      }, __jsx(CreatePost, null), __jsx(ChatComponent, null)), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 3,\n        lg: 3,\n        className: \"userInfo\"\n      }, __jsx(StickyContainer, {\n        style: {\n          position: 'sticky',\n          top: '0'\n        }\n      }, __jsx(Sticky, null, function (_ref) {\n        var style = _ref.style,\n            isSticky = _ref.isSticky,\n            wasSticky = _ref.wasSticky,\n            distanceFromTop = _ref.distanceFromTop,\n            distanceFromBottom = _ref.distanceFromBottom,\n            calculatedHeight = _ref.calculatedHeight;\n        return __jsx(\"header\", {\n          style: style\n        }, about, media);\n      })))));\n    }\n  }]);\n\n  return homeComponent;\n}(Component);\n\nexport default withStyles(homeStyle)(homeComponent);","map":null,"metadata":{},"sourceType":"module"}