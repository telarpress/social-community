{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _router = _interopRequireDefault(require(\"next/router\"));\n\nvar _onDemandEntriesUtils = require(\"./on-demand-entries-utils\");\n\nvar _default = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee({\n    assetPrefix\n  }) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _router.default.ready(() => {\n            _router.default.events.on('routeChangeComplete', _onDemandEntriesUtils.setupPing.bind(void 0, assetPrefix, () => _router.default.pathname));\n          });\n\n          (0, _onDemandEntriesUtils.setupPing)(assetPrefix, () => _router.default.pathname, _onDemandEntriesUtils.currentPage); // prevent HMR connection from being closed when running tests\n\n          if (!process.env.__NEXT_TEST_MODE) {\n            document.addEventListener('visibilitychange', event => {\n              const state = document.visibilityState;\n\n              if (state === 'visible') {\n                (0, _onDemandEntriesUtils.setupPing)(assetPrefix, () => _router.default.pathname, true);\n              } else {\n                (0, _onDemandEntriesUtils.closePing)();\n              }\n            });\n            window.addEventListener('beforeunload', () => {\n              (0, _onDemandEntriesUtils.closePing)();\n            });\n          }\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function _default(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = _default;","map":{"version":3,"sources":["../../../client/dev/on-demand-entries-client.js"],"names":["Router","setupPing","currentPage","process","document","event","state","window"],"mappings":";;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;;sEAEe,iBAAO;AAAP,IAAA;AAAO,GAAP;AAAA;AAAA;AAAA;AACbA,UAAAA,OAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAa,MAAM;AACjBA,YAAAA,OAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,EAAAA,CAAAA,qBAAAA,EAEEC,qBAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,EAAAA,WAAAA,EAAkC,MAAMD,OAAAA,CAAAA,OAAAA,CAF1CA,QAEEC,CAFFD;AADFA,WAAAA;;AAOA,WAAA,GAAA,qBAAA,CAAA,SAAA,EAAA,WAAA,EAAuB,MAAMA,OAAAA,CAAAA,OAAAA,CAA7B,QAAA,EAA8CE,qBAAAA,CAA9C,WAAA,EARa,CAUb;;AACA,cAAI,CAACC,OAAO,CAAPA,GAAAA,CAAL,gBAAA,EAAmC;AACjCC,YAAAA,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAA+CC,KAAD,IAAW;AACvD,oBAAMC,KAAK,GAAGF,QAAQ,CAAtB,eAAA;;AACA,kBAAIE,KAAK,KAAT,SAAA,EAAyB;AACvB,iBAAA,GAAA,qBAAA,CAAA,SAAA,EAAA,WAAA,EAAuB,MAAMN,OAAAA,CAAAA,OAAAA,CAA7B,QAAA,EAAA,IAAA;AADF,eAAA,MAEO;AACL,iBAAA,GAAA,qBAAA,CAAA,SAAA;AAEH;AAPDI,aAAAA;AASAG,YAAAA,MAAM,CAANA,gBAAAA,CAAAA,cAAAA,EAAwC,MAAM;AAC5C,eAAA,GAAA,qBAAA,CAAA,SAAA;AADFA,aAAAA;AAIH;;AAzBc;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Router from 'next/router'\nimport { setupPing, currentPage, closePing } from './on-demand-entries-utils'\n\nexport default async ({ assetPrefix }) => {\n  Router.ready(() => {\n    Router.events.on(\n      'routeChangeComplete',\n      setupPing.bind(this, assetPrefix, () => Router.pathname)\n    )\n  })\n\n  setupPing(assetPrefix, () => Router.pathname, currentPage)\n\n  // prevent HMR connection from being closed when running tests\n  if (!process.env.__NEXT_TEST_MODE) {\n    document.addEventListener('visibilitychange', (event) => {\n      const state = document.visibilityState\n      if (state === 'visible') {\n        setupPing(assetPrefix, () => Router.pathname, true)\n      } else {\n        closePing()\n      }\n    })\n\n    window.addEventListener('beforeunload', () => {\n      closePing()\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}