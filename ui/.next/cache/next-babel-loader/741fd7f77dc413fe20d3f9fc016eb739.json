{"ast":null,"code":"var _jsxFileName = \"G:\\\\wamp64\\\\www\\\\react-social-network\\\\ui\\\\src\\\\containers\\\\home\\\\homeComponent.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport HomeHeader from \"../../components/homeHeader/homeHeader\"; // import ChatComponent from \"../../components/chat/chatComponent\";\n\nimport { homeStyle } from './homeStyle';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass homeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDrawerOpen\", () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerClose\", () => {\n      this.setState({\n        drawerOpen: this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerToggle\", () => {\n      this.setState({\n        isMenuOpen: !this.state.isMenuOpen\n      });\n    });\n\n    this.state = {\n      menuId: 'primary-search-account-menu',\n      mobileMenuId: 'primary-search-account-menu-mobile',\n      isMenuOpen: false,\n      drawerOpen: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    const faces = [\"http://i.pravatar.cc/300?img=1\", \"http://i.pravatar.cc/300?img=2\", \"http://i.pravatar.cc/300?img=3\", \"http://i.pravatar.cc/300?img=4\"];\n\n    const renderMenu = __jsx(Menu, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      id: this.state.menuId,\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: this.state.isMenuOpen,\n      onClose: this.handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Profile\"));\n\n    const userInfo = __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      className: classes.userImage,\n      src: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), __jsx(CardContent, {\n      className: classes.context,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      className: \"MuiTypography--heading\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"milad morovati\"), __jsx(Typography, {\n      className: \"Followers--subheading\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Followers\"), __jsx(Typography, {\n      className: \"Following--subheading\",\n      variant: \"caption\",\n      align: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, \"Following\"), __jsx(Divider, {\n      className: classes.divider,\n      light: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), faces.map(face => __jsx(Avatar, {\n      className: classes.avatar,\n      key: face,\n      src: face,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }))));\n\n    const drawer = __jsx(Drawer, {\n      classes: {\n        paper: classes.drawerPaperLarge\n      },\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.drawerOpen,\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, __jsx(IconButton, {\n      onClick: () => this.handleDrawerClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    })), __jsx(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, ['Home', 'Profile', 'People'].map((text, index) => __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 60\n      }\n    }) : __jsx(MailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 76\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 27\n      }\n    })))));\n\n    const main = __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }));\n\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 12\n      }\n    }, __jsx(HomeHeader, {\n      onToggleDrawer: this.handleDrawerOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 16\n      }\n    }), userInfo, main, renderMenu);\n  }\n\n}\n\nexport default withStyles(homeStyle)(homeComponent);","map":{"version":3,"sources":["G:/wamp64/www/react-social-network/ui/src/containers/home/homeComponent.tsx"],"names":["React","Component","IconButton","Typography","Drawer","MenuItem","Menu","withStyles","Divider","ListItem","MailIcon","ListItemIcon","ListItemText","InboxIcon","List","Card","CardContent","CardMedia","HomeHeader","homeStyle","Avatar","homeComponent","constructor","props","setState","drawerOpen","state","isMenuOpen","menuId","mobileMenuId","render","classes","theme","faces","renderMenu","vertical","horizontal","handleDrawerToggle","userInfo","card","media","userImage","context","divider","map","face","avatar","drawer","paper","drawerPaperLarge","keepMounted","drawerHeader","handleDrawerClose","text","index","main","content","root","handleDrawerOpen"],"mappings":"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","sourcesContent":["import React ,{Component,useState} from \"react\";\r\nimport Head from \"next/head\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport clsx from 'clsx';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {inHomeComponentProps} from './inHomeComponentProps'\r\nimport {inHomeComponentState} from './inHomeComponentState'\r\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\r\n// import ChatComponent from \"../../components/chat/chatComponent\";\r\nimport {homeStyle} from './homeStyle'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextLogo from \"../../layouts/textLogo\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nclass homeComponent extends Component<inHomeComponentProps, inHomeComponentState>  {\r\n    constructor(props:inHomeComponentProps) {\r\n        super(props)\r\n        this.state = {\r\n            menuId:'primary-search-account-menu',\r\n            mobileMenuId : 'primary-search-account-menu-mobile',\r\n            isMenuOpen:false,\r\n            drawerOpen:false\r\n           }\r\n    }\r\n      handleDrawerOpen = () => {\r\n          this.setState({ drawerOpen: !this.state.drawerOpen })\r\n    };\r\n\r\n      handleDrawerClose = () => {\r\n          this.setState({ drawerOpen: this.state.drawerOpen })\r\n    };\r\n    handleDrawerToggle = () => {\r\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\r\n    }\r\n\r\n    render() {\r\n        const {classes, theme} = this.props\r\n\r\n        const faces = [\r\n            \"http://i.pravatar.cc/300?img=1\",\r\n            \"http://i.pravatar.cc/300?img=2\",\r\n            \"http://i.pravatar.cc/300?img=3\",\r\n            \"http://i.pravatar.cc/300?img=4\"\r\n        ];\r\n        const renderMenu = (\r\n            <Menu\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={this.state.menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={this.state.isMenuOpen}\r\n                onClose={this.handleDrawerToggle}\r\n           >\r\n                <MenuItem  >Profile</MenuItem>\r\n            </Menu>\r\n        );\r\n\r\n        const userInfo = (\r\n\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={\r\n                        \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\r\n                    }\r\n                >\r\n                    <Avatar\r\n                        className={classes.userImage}\r\n                        src={\r\n                            \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\r\n                        }\r\n                    />\r\n                </CardMedia>\r\n\r\n                <CardContent className={classes.context}>\r\n                    <Typography\r\n                        className={\"MuiTypography--heading\"}\r\n                        variant={\"h6\"}\r\n                        gutterBottom\r\n                    >\r\n                     milad morovati\r\n                    </Typography>\r\n                    <Typography\r\n                        className={\"Followers--subheading\"}\r\n                        variant={\"subtitle1\"}\r\n                    >\r\n                        Followers\r\n\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        className={\"Following--subheading\"}\r\n                        variant={\"caption\"}\r\n                        align={'center'}\r\n                    >\r\n                        Following\r\n\r\n                    </Typography>\r\n                    <Divider className={classes.divider} light />\r\n                    {faces.map(face => (\r\n                        <Avatar className={classes.avatar} key={face} src={face} />\r\n                    ))}\r\n                </CardContent>\r\n            </Card>\r\n\r\n        );\r\n      const drawer =(\r\n\r\n          <Drawer\r\n              classes={{\r\n                  paper: classes.drawerPaperLarge,\r\n              }}\r\n              variant=\"persistent\"\r\n              anchor=\"left\"\r\n              open={this.state.drawerOpen}\r\n              ModalProps={{\r\n                  keepMounted: true, // Better open performance on mobile.\r\n              }}\r\n          >\r\n              <div className={classes.drawerHeader}>\r\n                  <IconButton onClick={()=>this.handleDrawerClose()}>\r\n                      {/*{theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}*/}\r\n                  </IconButton>\r\n              </div>\r\n\r\n              <List>\r\n                  {['Home', 'Profile', 'People'].map((text, index) => (\r\n                      <ListItem button key={text}>\r\n                          <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                          <ListItemText primary={text} />\r\n                      </ListItem>\r\n                  ))}\r\n              </List>\r\n\r\n          </Drawer>\r\n\r\n      );\r\n\r\n      const main = (\r\n\r\n          <main   className={classes.content}>\r\n\r\n\r\n              <div className={classes.drawerHeader} />\r\n              {/*<ChatComponent > </ChatComponent>*/}\r\n          </main>\r\n\r\n\r\n      );\r\n\r\n\r\n\r\n\r\n        return (\r\n           <div className={classes.root}>\r\n\r\n\r\n               <HomeHeader onToggleDrawer={this.handleDrawerOpen}   />\r\n\r\n\r\n               {userInfo}\r\n               {main}\r\n\r\n               {renderMenu}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(homeStyle as any)(homeComponent)"]},"metadata":{},"sourceType":"module"}