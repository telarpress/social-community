{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _url = require(\"url\");\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _isDynamic = require(\"./../next-server/lib/router/utils/is-dynamic\");\n\nvar _routeMatcher = require(\"./../next-server/lib/router/utils/route-matcher\");\n\nvar _routeRegex = require(\"./../next-server/lib/router/utils/route-regex\");\n\nvar _router = require(\"./../next-server/lib/router/router\");\n\nfunction hasRel(rel, link) {\n  try {\n    link = document.createElement('link');\n    return link.relList.supports(rel);\n  } catch (_unused) {}\n}\n\nconst relPrefetch = hasRel('preload') && !hasRel('prefetch') ? // https://caniuse.com/#feat=link-rel-preload\n// macOS and iOS (Safari does not support prefetch)\n'preload' : // https://caniuse.com/#feat=link-rel-prefetch\n// IE 11, Edge 12+, nearly all evergreen\n'prefetch';\nconst hasNoModule = ('noModule' in document.createElement('script'));\n/** @param {string} route */\n\nfunction normalizeRoute(route) {\n  if (route[0] !== '/') {\n    throw new Error(\"Route name should start with a \\\"/\\\", got \\\"\".concat(route, \"\\\"\"));\n  }\n\n  route = route.replace(/\\/index$/, '/');\n  if (route === '/') return route;\n  return route.replace(/\\/$/, '');\n}\n\nfunction appendLink(href, rel, as) {\n  return new Promise((res, rej, link) => {\n    link = document.createElement('link');\n    link.crossOrigin = process.crossOrigin;\n    link.href = href;\n    link.rel = rel;\n    if (as) link.as = as;\n    link.onload = res;\n    link.onerror = rej;\n    document.head.appendChild(link);\n  });\n}\n\nclass PageLoader {\n  constructor(buildId, assetPrefix) {\n    this.buildId = buildId;\n    this.assetPrefix = assetPrefix;\n    this.pageCache = {};\n    this.pageRegisterEvents = (0, _mitt.default)();\n    this.loadingRoutes = {};\n\n    if (process.env.__NEXT_GRANULAR_CHUNKS) {\n      this.promisedBuildManifest = new Promise(resolve => {\n        if (window.__BUILD_MANIFEST) {\n          resolve(window.__BUILD_MANIFEST);\n        } else {\n          window.__BUILD_MANIFEST_CB = () => {\n            resolve(window.__BUILD_MANIFEST);\n          };\n        }\n      });\n    }\n    /** @type {Promise<Set<string>>} */\n\n\n    this.promisedSsgManifest = new Promise(resolve => {\n      if (window.__SSG_MANIFEST) {\n        resolve(window.__SSG_MANIFEST);\n      } else {\n        window.__SSG_MANIFEST_CB = () => {\n          resolve(window.__SSG_MANIFEST);\n        };\n      }\n    });\n  } // Returns a promise for the dependencies for a particular route\n\n\n  getDependencies(route) {\n    return this.promisedBuildManifest.then(man => man[route] && man[route].map(url => \"\".concat(this.assetPrefix, \"/_next/\").concat(encodeURI(url))) || []);\n  }\n  /**\n  * @param {string} href the route href (file-system path)\n  * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n  */\n\n\n  getDataHref(href, asPath) {\n    const getHrefForSlug =\n    /** @type string */\n    path => {\n      path = (0, _router.delBasePath)(path);\n      return \"\".concat(this.assetPrefix, \"/_next/data/\").concat(this.buildId).concat(path === '/' ? '/index' : path, \".json\");\n    };\n\n    const _ref = (0, _url.parse)(href, true),\n          hrefPathname = _ref.pathname,\n          query = _ref.query;\n\n    const _ref2 = (0, _url.parse)(asPath),\n          asPathname = _ref2.pathname;\n\n    const route = normalizeRoute(hrefPathname);\n    let isDynamic = (0, _isDynamic.isDynamicRoute)(route),\n        interpolatedRoute;\n\n    if (isDynamic) {\n      const dynamicRegex = (0, _routeRegex.getRouteRegex)(route);\n      const dynamicGroups = dynamicRegex.groups;\n      const dynamicMatches = // Try to match the dynamic route against the asPath\n      (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) || // Fall back to reading the values from the href\n      // TODO: should this take priority; also need to change in the router.\n      query;\n      interpolatedRoute = route;\n\n      if (!Object.keys(dynamicGroups).every(param => {\n        let value = dynamicMatches[param];\n        const repeat = dynamicGroups[param].repeat; // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n\n        if (repeat && !Array.isArray(value)) value = [value];\n        return param in dynamicMatches && ( // Interpolate group into data URL if present\n        interpolatedRoute = interpolatedRoute.replace(\"[\".concat(repeat ? '...' : '').concat(param, \"]\"), repeat ? value.map(encodeURIComponent).join('/') : encodeURIComponent(value)));\n      })) {\n        interpolatedRoute = ''; // did not satisfy all requirements\n        // n.b. We ignore this error because we handle warning for this case in\n        // development in the `<Link>` component directly.\n      }\n    }\n\n    return isDynamic ? interpolatedRoute && getHrefForSlug(interpolatedRoute) : getHrefForSlug(route);\n  }\n  /**\n  * @param {string} href the route href (file-system path)\n  * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n  */\n\n\n  prefetchData(href, asPath) {\n    const _ref3 = (0, _url.parse)(href, true),\n          hrefPathname = _ref3.pathname;\n\n    const route = normalizeRoute(hrefPathname);\n    return this.promisedSsgManifest.then((s, _dataHref) => // Check if the route requires a data file\n    s.has(route) && ( // Try to generate data href, noop when falsy\n    _dataHref = this.getDataHref(href, asPath)) && // noop when data has already been prefetched (dedupe)\n    !document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(_dataHref, \"\\\"]\")) && // Inject the `<link rel=prefetch>` tag for above computed `href`.\n    appendLink(_dataHref, relPrefetch, 'fetch'));\n  }\n\n  loadPage(route) {\n    return this.loadPageScript(route);\n  }\n\n  loadPageScript(route) {\n    route = normalizeRoute(route);\n    return new Promise((resolve, reject) => {\n      const fire = ({\n        error,\n        page,\n        mod\n      }) => {\n        this.pageRegisterEvents.off(route, fire);\n        delete this.loadingRoutes[route];\n\n        if (error) {\n          reject(error);\n        } else {\n          resolve({\n            page,\n            mod\n          });\n        }\n      }; // If there's a cached version of the page, let's use it.\n\n\n      const cachedPage = this.pageCache[route];\n\n      if (cachedPage) {\n        const error = cachedPage.error,\n              page = cachedPage.page,\n              mod = cachedPage.mod;\n        error ? reject(error) : resolve({\n          page,\n          mod\n        });\n        return;\n      } // Register a listener to get the page\n\n\n      this.pageRegisterEvents.on(route, fire); // If the page is loading via SSR, we need to wait for it\n      // rather downloading it again.\n\n      if (document.querySelector(\"script[data-next-page=\\\"\".concat(route, \"\\\"]\"))) {\n        return;\n      }\n\n      if (!this.loadingRoutes[route]) {\n        this.loadingRoutes[route] = true;\n\n        if (process.env.__NEXT_GRANULAR_CHUNKS) {\n          this.getDependencies(route).then(deps => {\n            deps.forEach(d => {\n              if (/\\.js$/.test(d) && !document.querySelector(\"script[src^=\\\"\".concat(d, \"\\\"]\"))) {\n                this.loadScript(d, route, false);\n              }\n\n              if (/\\.css$/.test(d) && !document.querySelector(\"link[rel=stylesheet][href^=\\\"\".concat(d, \"\\\"]\"))) {\n                appendLink(d, 'stylesheet').catch(() => {// FIXME: handle failure\n                  // Right now, this is needed to prevent an unhandled rejection.\n                });\n              }\n            });\n            this.loadRoute(route);\n          });\n        } else {\n          this.loadRoute(route);\n        }\n      }\n    });\n  }\n\n  loadRoute(route) {\n    route = normalizeRoute(route);\n    let scriptRoute = route === '/' ? '/index.js' : \"\".concat(route, \".js\");\n    const url = \"\".concat(this.assetPrefix, \"/_next/static/\").concat(encodeURIComponent(this.buildId), \"/pages\").concat(encodeURI(scriptRoute));\n    this.loadScript(url, route, true);\n  }\n\n  loadScript(url, route, isPage) {\n    const script = document.createElement('script');\n\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module'; // Only page bundle scripts need to have .module added to url,\n      // dependencies already have it added during build manifest creation\n\n      if (isPage) url = url.replace(/\\.js$/, '.module.js');\n    }\n\n    script.crossOrigin = process.crossOrigin;\n    script.src = url;\n\n    script.onerror = () => {\n      const error = new Error(\"Error loading script \".concat(url));\n      error.code = 'PAGE_LOAD_ERROR';\n      this.pageRegisterEvents.emit(route, {\n        error\n      });\n    };\n\n    document.body.appendChild(script);\n  } // This method if called by the route code.\n\n\n  registerPage(route, regFn) {\n    const register = () => {\n      try {\n        const mod = regFn();\n        const pageData = {\n          page: mod.default || mod,\n          mod\n        };\n        this.pageCache[route] = pageData;\n        this.pageRegisterEvents.emit(route, pageData);\n      } catch (error) {\n        this.pageCache[route] = {\n          error\n        };\n        this.pageRegisterEvents.emit(route, {\n          error\n        });\n      }\n    };\n\n    if (true) {\n      // Wait for webpack to become idle if it's not.\n      // More info: https://github.com/vercel/next.js/pull/1511\n      if (module.hot && module.hot.status() !== 'idle') {\n        console.log(\"Waiting for webpack to become \\\"idle\\\" to initialize the page: \\\"\".concat(route, \"\\\"\"));\n\n        const check = status => {\n          if (status === 'idle') {\n            module.hot.removeStatusHandler(check);\n            register();\n          }\n        };\n\n        module.hot.status(check);\n        return;\n      }\n    }\n\n    register();\n  }\n  /**\n  * @param {string} route\n  * @param {boolean} [isDependency]\n  */\n\n\n  prefetch(route, isDependency) {\n    // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n    // License: Apache 2.0\n    let cn;\n\n    if (cn = navigator.connection) {\n      // Don't prefetch if using 2G or if Save-Data is enabled.\n      if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n    }\n    /** @type {string} */\n\n\n    let url;\n\n    if (isDependency) {\n      url = route;\n    } else {\n      route = normalizeRoute(route);\n      let scriptRoute = \"\".concat(route === '/' ? '/index' : route, \".js\");\n\n      if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n        scriptRoute = scriptRoute.replace(/\\.js$/, '.module.js');\n      }\n\n      url = \"\".concat(this.assetPrefix, \"/_next/static/\").concat(encodeURIComponent(this.buildId), \"/pages\").concat(encodeURI(scriptRoute));\n    }\n\n    return Promise.all(document.querySelector(\"link[rel=\\\"\".concat(relPrefetch, \"\\\"][href^=\\\"\").concat(url, \"\\\"], script[data-next-page=\\\"\").concat(route, \"\\\"]\")) ? [] : [appendLink(url, relPrefetch, url.match(/\\.css$/) ? 'style' : 'script'), process.env.__NEXT_GRANULAR_CHUNKS && !isDependency && this.getDependencies(route).then(urls => Promise.all(urls.map(url => this.prefetch(url, true))))]).then( // do not return any data\n    () => {}, // swallow prefetch errors\n    () => {});\n  }\n\n}\n\nexports.default = PageLoader;","map":{"version":3,"sources":["../../client/page-loader.js"],"names":["link","document","relPrefetch","hasRel","hasNoModule","route","process","PageLoader","constructor","resolve","window","getDependencies","man","url","assetPrefix","encodeURI","getDataHref","getHrefForSlug","path","buildId","pathname","normalizeRoute","isDynamic","dynamicRegex","dynamicGroups","dynamicMatches","interpolatedRoute","Object","param","value","repeat","Array","encodeURIComponent","prefetchData","s","_dataHref","appendLink","loadPage","loadPageScript","fire","reject","cachedPage","error","deps","d","loadRoute","scriptRoute","loadScript","script","registerPage","register","mod","regFn","pageData","page","module","console","check","status","prefetch","cn","navigator","Promise","urls"],"mappings":"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","sourcesContent":["import { parse } from 'url'\nimport mitt from '../next-server/lib/mitt'\nimport { isDynamicRoute } from './../next-server/lib/router/utils/is-dynamic'\nimport { getRouteMatcher } from './../next-server/lib/router/utils/route-matcher'\nimport { getRouteRegex } from './../next-server/lib/router/utils/route-regex'\nimport { delBasePath } from './../next-server/lib/router/router'\n\nfunction hasRel(rel, link) {\n  try {\n    link = document.createElement('link')\n    return link.relList.supports(rel)\n  } catch {}\n}\n\nconst relPrefetch =\n  hasRel('preload') && !hasRel('prefetch')\n    ? // https://caniuse.com/#feat=link-rel-preload\n      // macOS and iOS (Safari does not support prefetch)\n      'preload'\n    : // https://caniuse.com/#feat=link-rel-prefetch\n      // IE 11, Edge 12+, nearly all evergreen\n      'prefetch'\n\nconst hasNoModule = 'noModule' in document.createElement('script')\n\n/** @param {string} route */\nfunction normalizeRoute(route) {\n  if (route[0] !== '/') {\n    throw new Error(`Route name should start with a \"/\", got \"${route}\"`)\n  }\n  route = route.replace(/\\/index$/, '/')\n\n  if (route === '/') return route\n  return route.replace(/\\/$/, '')\n}\n\nfunction appendLink(href, rel, as) {\n  return new Promise((res, rej, link) => {\n    link = document.createElement('link')\n    link.crossOrigin = process.crossOrigin\n    link.href = href\n    link.rel = rel\n    if (as) link.as = as\n\n    link.onload = res\n    link.onerror = rej\n\n    document.head.appendChild(link)\n  })\n}\n\nexport default class PageLoader {\n  constructor(buildId, assetPrefix) {\n    this.buildId = buildId\n    this.assetPrefix = assetPrefix\n\n    this.pageCache = {}\n    this.pageRegisterEvents = mitt()\n    this.loadingRoutes = {}\n    if (process.env.__NEXT_GRANULAR_CHUNKS) {\n      this.promisedBuildManifest = new Promise((resolve) => {\n        if (window.__BUILD_MANIFEST) {\n          resolve(window.__BUILD_MANIFEST)\n        } else {\n          window.__BUILD_MANIFEST_CB = () => {\n            resolve(window.__BUILD_MANIFEST)\n          }\n        }\n      })\n    }\n    /** @type {Promise<Set<string>>} */\n    this.promisedSsgManifest = new Promise((resolve) => {\n      if (window.__SSG_MANIFEST) {\n        resolve(window.__SSG_MANIFEST)\n      } else {\n        window.__SSG_MANIFEST_CB = () => {\n          resolve(window.__SSG_MANIFEST)\n        }\n      }\n    })\n  }\n\n  // Returns a promise for the dependencies for a particular route\n  getDependencies(route) {\n    return this.promisedBuildManifest.then(\n      (man) =>\n        (man[route] &&\n          man[route].map(\n            (url) => `${this.assetPrefix}/_next/${encodeURI(url)}`\n          )) ||\n        []\n    )\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  getDataHref(href, asPath) {\n    const getHrefForSlug = (/** @type string */ path) => {\n      path = delBasePath(path)\n      return `${this.assetPrefix}/_next/data/${this.buildId}${\n        path === '/' ? '/index' : path\n      }.json`\n    }\n\n    const { pathname: hrefPathname, query } = parse(href, true)\n    const { pathname: asPathname } = parse(asPath)\n\n    const route = normalizeRoute(hrefPathname)\n\n    let isDynamic = isDynamicRoute(route),\n      interpolatedRoute\n    if (isDynamic) {\n      const dynamicRegex = getRouteRegex(route)\n      const dynamicGroups = dynamicRegex.groups\n      const dynamicMatches =\n        // Try to match the dynamic route against the asPath\n        getRouteMatcher(dynamicRegex)(asPathname) ||\n        // Fall back to reading the values from the href\n        // TODO: should this take priority; also need to change in the router.\n        query\n\n      interpolatedRoute = route\n      if (\n        !Object.keys(dynamicGroups).every((param) => {\n          let value = dynamicMatches[param]\n          const repeat = dynamicGroups[param].repeat\n\n          // support single-level catch-all\n          // TODO: more robust handling for user-error (passing `/`)\n          if (repeat && !Array.isArray(value)) value = [value]\n\n          return (\n            param in dynamicMatches &&\n            // Interpolate group into data URL if present\n            (interpolatedRoute = interpolatedRoute.replace(\n              `[${repeat ? '...' : ''}${param}]`,\n              repeat\n                ? value.map(encodeURIComponent).join('/')\n                : encodeURIComponent(value)\n            ))\n          )\n        })\n      ) {\n        interpolatedRoute = '' // did not satisfy all requirements\n\n        // n.b. We ignore this error because we handle warning for this case in\n        // development in the `<Link>` component directly.\n      }\n    }\n\n    return isDynamic\n      ? interpolatedRoute && getHrefForSlug(interpolatedRoute)\n      : getHrefForSlug(route)\n  }\n\n  /**\n   * @param {string} href the route href (file-system path)\n   * @param {string} asPath the URL as shown in browser (virtual path); used for dynamic routes\n   */\n  prefetchData(href, asPath) {\n    const { pathname: hrefPathname } = parse(href, true)\n    const route = normalizeRoute(hrefPathname)\n    return this.promisedSsgManifest.then(\n      (s, _dataHref) =>\n        // Check if the route requires a data file\n        s.has(route) &&\n        // Try to generate data href, noop when falsy\n        (_dataHref = this.getDataHref(href, asPath)) &&\n        // noop when data has already been prefetched (dedupe)\n        !document.querySelector(\n          `link[rel=\"${relPrefetch}\"][href^=\"${_dataHref}\"]`\n        ) &&\n        // Inject the `<link rel=prefetch>` tag for above computed `href`.\n        appendLink(_dataHref, relPrefetch, 'fetch')\n    )\n  }\n\n  loadPage(route) {\n    return this.loadPageScript(route)\n  }\n\n  loadPageScript(route) {\n    route = normalizeRoute(route)\n\n    return new Promise((resolve, reject) => {\n      const fire = ({ error, page, mod }) => {\n        this.pageRegisterEvents.off(route, fire)\n        delete this.loadingRoutes[route]\n\n        if (error) {\n          reject(error)\n        } else {\n          resolve({ page, mod })\n        }\n      }\n\n      // If there's a cached version of the page, let's use it.\n      const cachedPage = this.pageCache[route]\n      if (cachedPage) {\n        const { error, page, mod } = cachedPage\n        error ? reject(error) : resolve({ page, mod })\n        return\n      }\n\n      // Register a listener to get the page\n      this.pageRegisterEvents.on(route, fire)\n\n      // If the page is loading via SSR, we need to wait for it\n      // rather downloading it again.\n      if (document.querySelector(`script[data-next-page=\"${route}\"]`)) {\n        return\n      }\n\n      if (!this.loadingRoutes[route]) {\n        this.loadingRoutes[route] = true\n        if (process.env.__NEXT_GRANULAR_CHUNKS) {\n          this.getDependencies(route).then((deps) => {\n            deps.forEach((d) => {\n              if (\n                /\\.js$/.test(d) &&\n                !document.querySelector(`script[src^=\"${d}\"]`)\n              ) {\n                this.loadScript(d, route, false)\n              }\n              if (\n                /\\.css$/.test(d) &&\n                !document.querySelector(`link[rel=stylesheet][href^=\"${d}\"]`)\n              ) {\n                appendLink(d, 'stylesheet').catch(() => {\n                  // FIXME: handle failure\n                  // Right now, this is needed to prevent an unhandled rejection.\n                })\n              }\n            })\n            this.loadRoute(route)\n          })\n        } else {\n          this.loadRoute(route)\n        }\n      }\n    })\n  }\n\n  loadRoute(route) {\n    route = normalizeRoute(route)\n    let scriptRoute = route === '/' ? '/index.js' : `${route}.js`\n\n    const url = `${this.assetPrefix}/_next/static/${encodeURIComponent(\n      this.buildId\n    )}/pages${encodeURI(scriptRoute)}`\n    this.loadScript(url, route, true)\n  }\n\n  loadScript(url, route, isPage) {\n    const script = document.createElement('script')\n    if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n      script.type = 'module'\n      // Only page bundle scripts need to have .module added to url,\n      // dependencies already have it added during build manifest creation\n      if (isPage) url = url.replace(/\\.js$/, '.module.js')\n    }\n    script.crossOrigin = process.crossOrigin\n    script.src = url\n    script.onerror = () => {\n      const error = new Error(`Error loading script ${url}`)\n      error.code = 'PAGE_LOAD_ERROR'\n      this.pageRegisterEvents.emit(route, { error })\n    }\n    document.body.appendChild(script)\n  }\n\n  // This method if called by the route code.\n  registerPage(route, regFn) {\n    const register = () => {\n      try {\n        const mod = regFn()\n        const pageData = { page: mod.default || mod, mod }\n        this.pageCache[route] = pageData\n        this.pageRegisterEvents.emit(route, pageData)\n      } catch (error) {\n        this.pageCache[route] = { error }\n        this.pageRegisterEvents.emit(route, { error })\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Wait for webpack to become idle if it's not.\n      // More info: https://github.com/vercel/next.js/pull/1511\n      if (module.hot && module.hot.status() !== 'idle') {\n        console.log(\n          `Waiting for webpack to become \"idle\" to initialize the page: \"${route}\"`\n        )\n\n        const check = (status) => {\n          if (status === 'idle') {\n            module.hot.removeStatusHandler(check)\n            register()\n          }\n        }\n        module.hot.status(check)\n        return\n      }\n    }\n\n    register()\n  }\n\n  /**\n   * @param {string} route\n   * @param {boolean} [isDependency]\n   */\n  prefetch(route, isDependency) {\n    // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n    // License: Apache 2.0\n    let cn\n    if ((cn = navigator.connection)) {\n      // Don't prefetch if using 2G or if Save-Data is enabled.\n      if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n    }\n\n    /** @type {string} */\n    let url\n    if (isDependency) {\n      url = route\n    } else {\n      route = normalizeRoute(route)\n\n      let scriptRoute = `${route === '/' ? '/index' : route}.js`\n      if (process.env.__NEXT_MODERN_BUILD && hasNoModule) {\n        scriptRoute = scriptRoute.replace(/\\.js$/, '.module.js')\n      }\n\n      url = `${this.assetPrefix}/_next/static/${encodeURIComponent(\n        this.buildId\n      )}/pages${encodeURI(scriptRoute)}`\n    }\n\n    return Promise.all(\n      document.querySelector(\n        `link[rel=\"${relPrefetch}\"][href^=\"${url}\"], script[data-next-page=\"${route}\"]`\n      )\n        ? []\n        : [\n            appendLink(\n              url,\n              relPrefetch,\n              url.match(/\\.css$/) ? 'style' : 'script'\n            ),\n            process.env.__NEXT_GRANULAR_CHUNKS &&\n              !isDependency &&\n              this.getDependencies(route).then((urls) =>\n                Promise.all(urls.map((url) => this.prefetch(url, true)))\n              ),\n          ]\n    ).then(\n      // do not return any data\n      () => {},\n      // swallow prefetch errors\n      () => {}\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}