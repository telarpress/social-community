{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport HomeHeader from \"../../components/homeHeader/homeHeader\"; // import ChatComponent from \"../../components/chat/chatComponent\";\n\nimport { homeStyle } from './homeStyle';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass homeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDrawerOpen\", () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerClose\", () => {\n      this.setState({\n        drawerOpen: this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerToggle\", () => {\n      this.setState({\n        isMenuOpen: !this.state.isMenuOpen\n      });\n    });\n\n    this.state = {\n      menuId: 'primary-search-account-menu',\n      mobileMenuId: 'primary-search-account-menu-mobile',\n      isMenuOpen: false,\n      drawerOpen: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    const faces = [\"http://i.pravatar.cc/300?img=1\", \"http://i.pravatar.cc/300?img=2\", \"http://i.pravatar.cc/300?img=3\", \"http://i.pravatar.cc/300?img=4\"];\n\n    const renderMenu = __jsx(Menu, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      id: this.state.menuId,\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: this.state.isMenuOpen,\n      onClose: this.handleDrawerToggle\n    }, __jsx(MenuItem, null, \"Profile\"));\n\n    const userInfo = __jsx(Card, {\n      className: classes.card\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\n    }, __jsx(Avatar, {\n      className: classes.media,\n      src: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\n    })), __jsx(CardContent, {\n      className: classes.context\n    }, __jsx(Typography, {\n      className: \"MuiTypography--heading\",\n      variant: \"h6\",\n      gutterBottom: true\n    }, \"milad morovati\"), __jsx(Typography, {\n      className: \"MuiTypography--subheading\",\n      variant: \"caption\"\n    }, \"Followers\"), __jsx(Typography, {\n      className: \"MuiTypography--subheading\",\n      variant: \"caption\"\n    }, \"Following\"), __jsx(Divider, {\n      className: classes.divider,\n      light: true\n    }), faces.map(face => __jsx(Avatar, {\n      className: classes.avatar,\n      key: face,\n      src: face\n    }))));\n\n    const drawer = __jsx(Drawer, {\n      classes: {\n        paper: classes.drawerPaperLarge\n      },\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.drawerOpen,\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      }\n    }, __jsx(\"div\", {\n      className: classes.drawerHeader\n    }, __jsx(IconButton, {\n      onClick: () => this.handleDrawerClose()\n    })), __jsx(List, null, ['Home', 'Profile', 'People'].map((text, index) => __jsx(ListItem, {\n      button: true,\n      key: text\n    }, __jsx(ListItemIcon, null, index % 2 === 0 ? __jsx(InboxIcon, null) : __jsx(MailIcon, null)), __jsx(ListItemText, {\n      primary: text\n    })))));\n\n    const main = __jsx(\"main\", {\n      className: classes.content\n    }, __jsx(\"div\", {\n      className: classes.drawerHeader\n    }));\n\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(HomeHeader, {\n      onToggleDrawer: this.handleDrawerOpen\n    }), userInfo, main, renderMenu);\n  }\n\n}\n\nexport default withStyles(homeStyle)(homeComponent);","map":null,"metadata":{},"sourceType":"module"}