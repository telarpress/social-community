{"ast":null,"code":"var _jsxFileName = \"/home/milad/Telar/social-community/ui/src/containers/home/homeComponent.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Faker from 'faker';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\nimport Cover from \"../../components/cover/coverComponent\";\nimport { homeStyle } from './homeStyle';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ProfileTabComponent from '../../components/profileTab/profileTabComponent';\nimport ProfileInfoComponent from '../../components/profileInfo/profileInfoComponent';\n\nclass homeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDrawerOpen\", () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerClose\", () => {\n      this.setState({\n        drawerOpen: this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerToggle\", () => {\n      this.setState({\n        isMenuOpen: !this.state.isMenuOpen\n      });\n    });\n\n    this.state = {\n      menuId: 'primary-search-account-menu',\n      mobileMenuId: 'primary-search-account-menu-mobile',\n      isMenuOpen: false,\n      drawerOpen: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme,\n      posts\n    } = this.props;\n\n    const renderMenu = __jsx(Menu, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      id: this.state.menuId,\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: this.state.isMenuOpen,\n      onClose: this.handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Profile\"));\n\n    const userInfo = __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      className: classes.userImage,\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }))); // const peopleList = (\n    //     <Card className={classes.card}>\n    //         <Typography\n    //             className={classes.peopleHeader}\n    //             variant={\"h6\"}\n    //         >\n    //             Peoples\n    //             <Divider light className={classes.divider} />\n    //         </Typography>\n    //         <List className={classes.rootPeople}>\n    //             {\n    //                 this.props.users.map(function(item,i){\n    //               return (\n    //                       <div key={i}>\n    //                           <ListItem alignItems=\"flex-start\">\n    //                               <ListItemAvatar>\n    //                                   <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\n    //                               </ListItemAvatar>\n    //                               <ListItemText\n    //                                   secondary={\n    //                                       <React.Fragment>\n    //                                           <Typography\n    //                                               component=\"span\"\n    //                                               variant=\"body2\"\n    //                                               className={classes.peopleUserName}\n    //                                               color=\"textPrimary\"\n    //                                           >\n    //                                               {item.username}\n    //                                           </Typography>\n    //                                       </React.Fragment>\n    //                                   }\n    //                               />\n    //                           </ListItem>\n    //                           <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\n    //                       </div>\n    //                   )\n    //                 })\n    //             }\n    //         </List>\n    //     </Card>\n    // );\n    // const drawer =(\n    //     <Drawer\n    //         classes={{\n    //             paper: classes.drawerPaperLarge,\n    //         }}\n    //         variant=\"persistent\"\n    //         anchor=\"left\"\n    //         open={this.state.drawerOpen}\n    //         ModalProps={{\n    //             keepMounted: true, // Better open performance on mobile.\n    //         }}\n    //     >\n    //         <div className={classes.drawerHeader}>\n    //             <IconButton onClick={()=>this.handleDrawerClose()}>\n    //                 {/*{theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}*/}\n    //             </IconButton>\n    //         </div>\n    //         <List>\n    //             {['Home', 'Profile', 'People'].map((text, index) => (\n    //                 <ListItem button key={text}>\n    //                     <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n    //                     <ListItemText primary={text} />\n    //                 </ListItem>\n    //             ))}\n    //         </List>\n    //     </Drawer>\n    // );\n\n\n    const cover = __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(Cover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }), __jsx(ProfileInfoComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), __jsx(\"hr\", {\n      style: {\n        width: '65%',\n        color: '#eee'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }), __jsx(ProfileTabComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }));\n\n    const profileInfo = __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    });\n\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, __jsx(HomeHeader, {\n      onToggleDrawer: this.handleDrawerOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }), __jsx(Grid, {\n      container: true,\n      style: {\n        paddingTop: '60px !important'\n      },\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      lg: 12,\n      style: {\n        background: '#fff',\n        marginTop: '-45'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, cover)), __jsx(Grid, {\n      container: true,\n      style: {\n        paddingTop: '60px !important',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 5,\n      lg: 5,\n      className: \"profileInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, userInfo), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 3,\n      lg: 3,\n      className: \"userInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, userInfo)));\n  }\n\n}\n\nexport default withStyles(homeStyle)(homeComponent);","map":{"version":3,"sources":["/home/milad/Telar/social-community/ui/src/containers/home/homeComponent.tsx"],"names":["React","Component","Grid","MenuItem","Menu","withStyles","Faker","Card","CardMedia","HomeHeader","Cover","homeStyle","Avatar","ProfileTabComponent","ProfileInfoComponent","homeComponent","constructor","props","setState","drawerOpen","state","isMenuOpen","menuId","mobileMenuId","render","classes","theme","posts","renderMenu","vertical","horizontal","handleDrawerToggle","userInfo","card","media","userImage","internet","avatar","cover","content","width","color","profileInfo","root","handleDrawerOpen","paddingTop","background","marginTop","display","justifyContent"],"mappings":"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","sourcesContent":["import React ,{Component,useState} from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Faker from 'faker'\nimport Card from '@material-ui/core/Card';\nimport Link from '@material-ui/core/Link';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport {inHomeComponentProps} from './inHomeComponentProps'\nimport {inHomeComponentState} from './inHomeComponentState'\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\nimport ChatComponent from \"../../components/chat/chatComponent\";\nimport CreatePost from \"../../components/\";\nimport Cover from \"../../components/cover/coverComponent\";\n\nimport {homeStyle} from './homeStyle'\nimport Avatar from \"@material-ui/core/Avatar\";\nimport  ProfileTabComponent from '../../components/profileTab/profileTabComponent'\nimport  ProfileInfoComponent from '../../components/profileInfo/profileInfoComponent'\nclass homeComponent extends Component<inHomeComponentProps, inHomeComponentState>  {\n    constructor(props:inHomeComponentProps) {\n        super(props)\n        this.state = {\n            menuId: 'primary-search-account-menu',\n            mobileMenuId: 'primary-search-account-menu-mobile',\n            isMenuOpen: false,\n            drawerOpen: false\n        }\n \n    }\n    handleDrawerOpen = () => {\n        this.setState({ drawerOpen: !this.state.drawerOpen })\n    };\n    handleDrawerClose = () => {\n        this.setState({ drawerOpen: this.state.drawerOpen })\n    };\n    handleDrawerToggle = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\n    }\n    render() {\n        const {classes, theme,posts} = this.props\n        const renderMenu = (\n            <Menu\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                id={this.state.menuId}\n                keepMounted\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={this.state.isMenuOpen}\n                onClose={this.handleDrawerToggle}\n            >\n                <MenuItem  >Profile</MenuItem>\n            </Menu>\n        );\n        const userInfo = (\n            <Card className={classes.card}>\n                <CardMedia\n                    className={classes.media}\n                    image={\n                        \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\n                    }\n                >\n                    <Avatar\n                        className={classes.userImage}\n                        src={\n                            Faker.internet.avatar()\n                        }\n                    />\n                </CardMedia>\n\n                \n            </Card>\n\n        );\n\n        // const peopleList = (\n\n        //     <Card className={classes.card}>\n\n        //         <Typography\n        //             className={classes.peopleHeader}\n        //             variant={\"h6\"}\n        //         >\n        //             Peoples\n        //             <Divider light className={classes.divider} />\n\n\n        //         </Typography>\n        //         <List className={classes.rootPeople}>\n\n        //             {\n        //                 this.props.users.map(function(item,i){\n\n        //               return (\n        //                       <div key={i}>\n        //                           <ListItem alignItems=\"flex-start\">\n        //                               <ListItemAvatar>\n        //                                   <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\n        //                               </ListItemAvatar>\n        //                               <ListItemText\n        //                                   secondary={\n        //                                       <React.Fragment>\n        //                                           <Typography\n        //                                               component=\"span\"\n        //                                               variant=\"body2\"\n        //                                               className={classes.peopleUserName}\n        //                                               color=\"textPrimary\"\n        //                                           >\n        //                                               {item.username}\n        //                                           </Typography>\n\n        //                                       </React.Fragment>\n        //                                   }\n        //                               />\n        //                           </ListItem>\n        //                           <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\n\n\n        //                       </div>\n\n        //                   )\n\n\n        //                 })\n        //             }\n\n        //         </List>\n        //     </Card>\n\n        // );\n        // const drawer =(\n\n        //     <Drawer\n        //         classes={{\n        //             paper: classes.drawerPaperLarge,\n        //         }}\n        //         variant=\"persistent\"\n        //         anchor=\"left\"\n        //         open={this.state.drawerOpen}\n        //         ModalProps={{\n        //             keepMounted: true, // Better open performance on mobile.\n        //         }}\n        //     >\n        //         <div className={classes.drawerHeader}>\n        //             <IconButton onClick={()=>this.handleDrawerClose()}>\n        //                 {/*{theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}*/}\n        //             </IconButton>\n        //         </div>\n\n        //         <List>\n        //             {['Home', 'Profile', 'People'].map((text, index) => (\n        //                 <ListItem button key={text}>\n        //                     <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n        //                     <ListItemText primary={text} />\n        //                 </ListItem>\n        //             ))}\n        //         </List>\n\n        //     </Drawer>\n\n        // );\n\n        const cover = (\n            <main   className={classes.content}>\n                <Cover   />\n                <ProfileInfoComponent   />\n                <hr style={{width: '65%', color: '#eee'}}/>\n                <ProfileTabComponent />\n            </main>\n        );\n        const profileInfo = (\n            <main   className={classes.content}>\n          \n            </main>\n        );\n        return (\n            <div className={classes.root}>\n                <HomeHeader onToggleDrawer={this.handleDrawerOpen}/>\n                <Grid container   style={{paddingTop:'60px !important'}} spacing={3}>\n                    <Grid item xs={12} sm={12} lg={12} style={{background:'#fff',marginTop: '-45'}}>\n                        {cover}\n                    </Grid>\n                </Grid>\n                <Grid container   style={{paddingTop:'60px !important',display: 'flex',justifyContent:'center'}} spacing={3}>\n                    <Grid item xs={12} sm={12} md={5} lg={5} className='profileInfo' >\n                    {userInfo}\n                        \n                    </Grid>\n  \n                    <Grid item xs={12} sm={12} md={3} lg={3} className='userInfo' >\n                        {userInfo}\n                        \n                    </Grid>\n \n                </Grid>\n            </div>\n\n        )\n\n    }\n\n}\n\nexport default withStyles(homeStyle as any)(homeComponent)"]},"metadata":{},"sourceType":"module"}