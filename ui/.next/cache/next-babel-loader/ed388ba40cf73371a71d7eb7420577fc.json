{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\wamp\\\\www\\\\react-social-network\\\\ui\\\\src\\\\containers\\\\home\\\\homeComponent.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Faker from 'faker';\nimport ListItem from '@material-ui/core/ListItem';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport Link from '@material-ui/core/Link';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\nimport ChatComponent from \"../../components/chat/chatComponent\";\nimport { homeStyle } from './homeStyle';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass homeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDrawerOpen\", () => {\n      this.setState({\n        drawerOpen: !this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerClose\", () => {\n      this.setState({\n        drawerOpen: this.state.drawerOpen\n      });\n    });\n\n    _defineProperty(this, \"handleDrawerToggle\", () => {\n      this.setState({\n        isMenuOpen: !this.state.isMenuOpen\n      });\n    });\n\n    this.state = {\n      menuId: 'primary-search-account-menu',\n      mobileMenuId: 'primary-search-account-menu-mobile',\n      isMenuOpen: false,\n      drawerOpen: false\n    };\n    console.log(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme,\n          posts = _this$props.posts;\n\n    const renderMenu = __jsx(Menu, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      id: this.state.menuId,\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: this.state.isMenuOpen,\n      onClose: this.handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(MenuItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Profile\"));\n\n    const userInfo = __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      className: classes.userImage,\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })), __jsx(CardContent, {\n      className: classes.context,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      className: classes.typographyHeading,\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, Faker.internet.userName()), __jsx(Typography, {\n      className: classes.Followers,\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Followers\", __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, Faker.random.number())), __jsx(Typography, {\n      className: classes.Following,\n      variant: \"caption\",\n      align: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Following\", __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, Faker.random.number())), __jsx(Divider, {\n      light: true,\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), __jsx(Link, {\n      href: \"/\",\n      className: classes.linkProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, \"view Profile\")));\n\n    const peopleList = __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      className: classes.peopleHeader,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Peoples\", __jsx(Divider, {\n      light: true,\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })), __jsx(List, {\n      className: classes.rootPeople,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      alt: \"Remy Sharp\",\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    })), __jsx(ListItemText, {\n      secondary: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.peopleUserName,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }, Faker.internet.userName())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      className: classes.divider,\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }), __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      alt: \"Remy Sharp\",\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    })), __jsx(ListItemText, {\n      secondary: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 33\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.peopleUserName,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 37\n        }\n      }, Faker.internet.userName())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      className: classes.divider,\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }), __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      alt: \"Remy Sharp\",\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    })), __jsx(ListItemText, {\n      secondary: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.peopleUserName,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 37\n        }\n      }, Faker.internet.userName())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      className: classes.divider,\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, __jsx(Avatar, {\n      alt: \"Remy Sharp\",\n      src: Faker.internet.avatar(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    })), __jsx(ListItemText, {\n      secondary: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.peopleUserName,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 37\n        }\n      }, Faker.internet.userName())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }))));\n\n    const drawer = __jsx(Drawer, {\n      classes: {\n        paper: classes.drawerPaperLarge\n      },\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: this.state.drawerOpen,\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, __jsx(IconButton, {\n      onClick: () => this.handleDrawerClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    })), __jsx(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, ['Home', 'Profile', 'People'].map((text, index) => __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 62\n      }\n    }) : __jsx(MailIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 78\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    })))));\n\n    const main = __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, __jsx(ChatComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }));\n\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, __jsx(HomeHeader, {\n      onToggleDrawer: this.handleDrawerOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }), __jsx(Grid, {\n      container: true,\n      style: {\n        paddingTop: '60px !important'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      lg: 3,\n      className: \"userInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, userInfo, peopleList), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      lg: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, main)));\n  }\n\n}\n\nexport default withStyles(homeStyle)(homeComponent);","map":{"version":3,"sources":["G:/wamp/www/react-social-network/ui/src/containers/home/homeComponent.tsx"],"names":["React","Component","Grid","ListItemAvatar","IconButton","Typography","Drawer","MenuItem","Menu","withStyles","Divider","Faker","ListItem","MailIcon","ListItemIcon","ListItemText","InboxIcon","List","Card","Link","CardContent","CardMedia","HomeHeader","ChatComponent","homeStyle","Avatar","homeComponent","constructor","props","setState","drawerOpen","state","isMenuOpen","menuId","mobileMenuId","console","log","render","classes","theme","posts","renderMenu","vertical","horizontal","handleDrawerToggle","userInfo","card","media","userImage","internet","avatar","context","typographyHeading","userName","Followers","random","number","Following","divider","linkProfile","peopleList","peopleHeader","rootPeople","peopleUserName","drawer","paper","drawerPaperLarge","keepMounted","drawerHeader","handleDrawerClose","map","text","index","main","content","root","handleDrawerOpen","paddingTop"],"mappings":"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","sourcesContent":["import React ,{Component,useState} from \"react\";\r\nimport Head from \"next/head\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Faker from 'faker'\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport Link from '@material-ui/core/Link';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {inHomeComponentProps} from './inHomeComponentProps'\r\nimport {inHomeComponentState} from './inHomeComponentState'\r\nimport HomeHeader from \"../../components/homeHeader/homeHeader\";\r\nimport ChatComponent from \"../../components/chat/chatComponent\";\r\nimport {homeStyle} from './homeStyle'\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextLogo from \"../../layouts/textLogo\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nclass homeComponent extends Component<inHomeComponentProps, inHomeComponentState>  {\r\n    constructor(props:inHomeComponentProps) {\r\n        super(props)\r\n        this.state = {\r\n            menuId: 'primary-search-account-menu',\r\n            mobileMenuId: 'primary-search-account-menu-mobile',\r\n            isMenuOpen: false,\r\n            drawerOpen: false\r\n        }\r\n        console.log(props);\r\n\r\n    }\r\n    handleDrawerOpen = () => {\r\n        this.setState({ drawerOpen: !this.state.drawerOpen })\r\n    };\r\n    handleDrawerClose = () => {\r\n        this.setState({ drawerOpen: this.state.drawerOpen })\r\n    };\r\n    handleDrawerToggle = () => {\r\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\r\n    }\r\n    render() {\r\n        const {classes, theme,posts} = this.props\r\n        const renderMenu = (\r\n            <Menu\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={this.state.menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={this.state.isMenuOpen}\r\n                onClose={this.handleDrawerToggle}\r\n            >\r\n                <MenuItem  >Profile</MenuItem>\r\n            </Menu>\r\n        );\r\n        const userInfo = (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={\r\n                        \"https://image.freepik.com/free-photo/river-foggy-mountains-landscape_1204-511.jpg\"\r\n                    }\r\n                >\r\n                    <Avatar\r\n                        className={classes.userImage}\r\n                        src={\r\n                            Faker.internet.avatar()\r\n                        }\r\n                    />\r\n                </CardMedia>\r\n\r\n                <CardContent className={classes.context}>\r\n                    <Typography\r\n                        className={classes.typographyHeading}\r\n                        variant={\"h6\"}\r\n                        gutterBottom\r\n                    >\r\n                        {Faker.internet.userName()}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        className={classes.Followers}\r\n                        variant={\"caption\"}\r\n                    >\r\n                        Followers\r\n\r\n                        <p>{Faker.random.number()}</p>\r\n\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        className={classes.Following}\r\n                        variant={\"caption\"}\r\n                        align={'center'}\r\n                    >\r\n                        Following\r\n\r\n                        <p>{Faker.random.number()}</p>\r\n                    </Typography>\r\n\r\n                    <Divider light className={classes.divider} />\r\n\r\n                    <Link href=\"/\"  className={classes.linkProfile}>view Profile</Link>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        );\r\n\r\n        const peopleList = (\r\n\r\n            <Card className={classes.card}>\r\n\r\n                <Typography\r\n                    className={classes.peopleHeader}\r\n                    variant={\"h6\"}\r\n                >\r\n                    Peoples\r\n                    <Divider light className={classes.divider} />\r\n\r\n\r\n                </Typography>\r\n                <List className={classes.rootPeople}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.peopleUserName}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {Faker.internet.userName()}\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\r\n\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.peopleUserName}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {Faker.internet.userName()}\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\r\n\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.peopleUserName}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {Faker.internet.userName()}\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n\r\n                    <Divider variant=\"inset\" className={classes.divider} component=\"li\" />\r\n\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src={Faker.internet.avatar()} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={classes.peopleUserName}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {Faker.internet.userName()}\r\n                                    </Typography>\r\n\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </Card>\r\n\r\n        );\r\n        const drawer =(\r\n\r\n            <Drawer\r\n                classes={{\r\n                    paper: classes.drawerPaperLarge,\r\n                }}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={this.state.drawerOpen}\r\n                ModalProps={{\r\n                    keepMounted: true, // Better open performance on mobile.\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={()=>this.handleDrawerClose()}>\r\n                        {/*{theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}*/}\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <List>\r\n                    {['Home', 'Profile', 'People'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n\r\n            </Drawer>\r\n\r\n        );\r\n\r\n        const main = (\r\n            <main   className={classes.content}>\r\n                <ChatComponent   />\r\n            </main>\r\n        );\r\n        return (\r\n            <div className={classes.root}>\r\n                <HomeHeader onToggleDrawer={this.handleDrawerOpen}/>\r\n                <Grid container   style={{paddingTop:'60px !important'}}>\r\n\r\n                    <Grid item xs={12} sm={12} lg={3} className='userInfo' >\r\n                        {userInfo}\r\n                        {peopleList}\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} lg={7}>\r\n                        {main}\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(homeStyle as any)(homeComponent)"]},"metadata":{},"sourceType":"module"}