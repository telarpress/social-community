{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\wamp64\\\\www\\\\react-social-network\\\\ui\\\\src\\\\containers\\\\login\\\\LoginComponent.tsx\";\nvar __jsx = React.createElement;\n// - Import external components\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport StringAPI from './../../api/StringAPI.ts';\nimport { push } from 'connected-react-router';\nimport { ServerRequestType } from './../../constants/serverRequestType';\nimport { Map } from 'immutable'; // @ts-ignore\n\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport config from './../config';\nimport { OAuthType } from './../../core/domain/authorize';\nimport * as authorizeActions from './../../store/actions/authorizeActions';\nimport { ServerRequestStatusType } from './../../store/actions/serverRequestStatusType';\nimport { loginStyles } from './loginStyles'; // - Material-UI\n// - Components\n// - Import actions\n// - Create Login component class\n\nexport class LoginComponent extends Component {\n  /**\r\n   * Component constructor\r\n   *\r\n   */\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"styles\", {\n      singinOptions: {\n        paddingBottom: 10,\n        justifyContent: 'space-around',\n        display: 'flex'\n      },\n      divider: {\n        marginBottom: 10,\n        marginTop: 15\n      }\n    });\n\n    _defineProperty(this, \"handleInputChange\", event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n\n      switch (name) {\n        case 'emailInput':\n          this.setState({\n            emailInputError: ''\n          });\n          break;\n\n        case 'passwordInput':\n          this.setState({\n            confirmInputError: '',\n            passwordInputError: ''\n          });\n          break;\n\n        default:\n      }\n    });\n\n    _defineProperty(this, \"handleForm\", () => {\n      const t = this.props.t;\n      let error = false;\n\n      if (this.state.emailInput === '') {\n        this.setState({\n          emailInputError: t('login.emailRequiredError')\n        });\n        error = true;\n      }\n\n      if (this.state.passwordInput === '') {\n        this.setState({\n          passwordInputError: t('login.passwordRequiredError')\n        });\n        error = true;\n      }\n\n      if (!error) {\n        this.props.login(this.state.emailInput, this.state.passwordInput);\n      }\n    });\n\n    this.state = {\n      emailInput: '',\n      emailInputError: '',\n      passwordInput: '',\n      passwordInputError: '',\n      confirmInputError: ''\n    }; // Binding function to `this`\n\n    this.handleForm = this.handleForm.bind(this);\n  }\n  /**\r\n   * Handle data on input change\r\n   * @param  {event} evt is an event of inputs of element on change\r\n   */\n\n\n  /**\r\n   * Reneder component DOM\r\n   * \r\n   */\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loginWithOAuth = _this$props.loginWithOAuth,\n          t = _this$props.t,\n          loginRequest = _this$props.loginRequest;\n    const emailInput = this.state.emailInput;\n\n    const OAuthLogin = __jsx(\"div\", {\n      style: this.styles.singinOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, __jsx(IconButton, {\n      onClick: () => loginWithOAuth(OAuthType.FACEBOOK),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"icon-fb icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 10\n      }\n    })), __jsx(IconButton, {\n      onClick: () => loginWithOAuth(OAuthType.GOOGLE),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \" \", __jsx(\"div\", {\n      className: \"icon-google icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), \" \"), __jsx(IconButton, {\n      onClick: () => loginWithOAuth(OAuthType.GITHUB),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \" \", __jsx(\"div\", {\n      className: \"icon-github icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), \" \"));\n\n    const loginRequestId = StringAPI.createServerRequestId(ServerRequestType.AuthLogin, emailInput);\n    const loginRequestStatus = loginRequest.get(loginRequestId, {\n      status: ServerRequestStatusType.NoAction\n    }).status;\n    const loading = loginRequestStatus === ServerRequestStatusType.Sent;\n    return __jsx(\"form\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, config.settings.enabledOAuthLogin ? OAuthLogin : '', __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }), __jsx(TextField, {\n      className: classes.textField,\n      color: \"secondary\",\n      autoFocus: true,\n      onChange: this.handleInputChange,\n      helperText: this.state.emailInputError,\n      error: this.state.emailInputError.trim() !== '',\n      name: \"emailInput\",\n      label: t('login.emailLabel'),\n      type: \"email\",\n      tabIndex: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), __jsx(TextField, {\n      color: \"secondary\",\n      className: classes.textField,\n      onChange: this.handleInputChange,\n      helperText: this.state.passwordInputError,\n      error: this.state.passwordInputError.trim() !== '',\n      name: \"passwordInput\",\n      label: t('login.passwordLabel'),\n      type: \"password\",\n      tabIndex: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"login__button-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.wrapperButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: loading,\n      onClick: this.handleForm,\n      fullWidth: true,\n      tabIndex: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, t('login.loginButton')), loading && __jsx(CircularProgress, {\n      size: 24,\n      className: classes.buttonProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 27\n      }\n    }))), __jsx(\"div\", {\n      className: classes.forgotRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: classes.bottomPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, __jsx(NavLink, {\n      to: \"/resetPassword\",\n      className: classes.forgotText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 51\n      }\n    }, t('login.forgetPasswordMessage')))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: classes.forgotRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      className: classes.bottomPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, t('login.createAccountText'), \" \", __jsx(NavLink, {\n      to: \"/signup\",\n      className: classes.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 83\n      }\n    }, t('login.createAccountButton'))))));\n  }\n\n}\n/**\r\n * Map dispatch to props\r\n */\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    login: (email, password) => {\n      dispatch(authorizeActions.dbLogin(email, password));\n    },\n    loginWithOAuth: type => dispatch(authorizeActions.dbLoginWithOAuth(type)),\n    signupPage: () => {\n      dispatch(push('/signup'));\n    }\n  };\n};\n/**\r\n * Map state to props\r\n */\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const loginRequest = state.getIn(['server', 'request'], Map({}));\n  return {\n    loginRequest\n  };\n}; // - Connect component to redux store\n\n\nconst translateWrapper = withTranslation('translations')(LoginComponent);\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(loginStyles)(translateWrapper)));","map":{"version":3,"sources":["G:/wamp64/www/react-social-network/ui/src/containers/login/LoginComponent.tsx"],"names":["Button","CircularProgress","Divider","IconButton","withStyles","TextField","StringAPI","push","ServerRequestType","Map","React","Component","withTranslation","connect","NavLink","withRouter","config","OAuthType","authorizeActions","ServerRequestStatusType","loginStyles","LoginComponent","constructor","props","singinOptions","paddingBottom","justifyContent","display","divider","marginBottom","marginTop","event","target","value","type","checked","name","setState","emailInputError","confirmInputError","passwordInputError","t","error","state","emailInput","passwordInput","login","handleForm","bind","render","classes","loginWithOAuth","loginRequest","OAuthLogin","styles","FACEBOOK","GOOGLE","GITHUB","loginRequestId","createServerRequestId","AuthLogin","loginRequestStatus","get","status","NoAction","loading","Sent","paper","root","settings","enabledOAuthLogin","textField","handleInputChange","trim","wrapperButton","buttonProgress","forgotRoot","bottomPaper","forgotText","link","mapDispatchToProps","dispatch","ownProps","email","password","dbLogin","dbLoginWithOAuth","signupPage","mapStateToProps","getIn","translateWrapper"],"mappings":"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","sourcesContent":["// - Import external components\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport StringAPI from './../../api/StringAPI.ts';\r\nimport { push } from 'connected-react-router';\r\nimport { ServerRequestType } from './../../constants/serverRequestType';\r\nimport { Map } from 'immutable';\r\n// @ts-ignore\r\nimport React , {Component} from 'react'\r\nimport { withTranslation } from 'react-i18next';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport config from './../config';\r\nimport { OAuthType } from './../../core/domain/authorize';\r\nimport * as authorizeActions from './../../store/actions/authorizeActions';\r\nimport { ServerRequestStatusType } from './../../store/actions/serverRequestStatusType';\r\n\r\nimport { ILoginComponentProps } from './ILoginComponentProps';\r\nimport { ILoginComponentState } from './ILoginComponentState';\r\nimport { loginStyles } from './loginStyles';\r\n\r\n// - Material-UI\r\n// - Components\r\n// - Import actions\r\n// - Create Login component class\r\nexport class LoginComponent extends Component<ILoginComponentProps, ILoginComponentState> {\r\n\r\n  styles = {\r\n    singinOptions: {\r\n      paddingBottom: 10,\r\n      justifyContent: 'space-around',\r\n      display: 'flex'\r\n    },\r\n    divider: {\r\n      marginBottom: 10,\r\n      marginTop: 15\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component constructor\r\n   *\r\n   */\r\n  constructor(props: ILoginComponentProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      emailInput: '',\r\n      emailInputError: '',\r\n      passwordInput: '',\r\n      passwordInputError: '',\r\n      confirmInputError: ''\r\n    }\r\n\r\n    // Binding function to `this`\r\n    this.handleForm = this.handleForm.bind(this)\r\n\r\n  }\r\n\r\n  /**\r\n   * Handle data on input change\r\n   * @param  {event} evt is an event of inputs of element on change\r\n   */\r\n  handleInputChange = (event: any) => {\r\n    const target = event.target\r\n    const value = target.type === 'checkbox' ? target.checked : target.value\r\n    const name = target.name\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n\r\n    switch (name) {\r\n      case 'emailInput':\r\n        this.setState({\r\n          emailInputError: ''\r\n        })\r\n        break\r\n      case 'passwordInput':\r\n        this.setState({\r\n          confirmInputError: '',\r\n          passwordInputError: ''\r\n        })\r\n\r\n        break\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle register form\r\n   */\r\n  handleForm = () => {\r\n    const { t } = this.props\r\n    let error = false\r\n    if (this.state.emailInput === '') {\r\n      this.setState({\r\n        emailInputError: t!('login.emailRequiredError')\r\n      })\r\n      error = true\r\n\r\n    }\r\n    if (this.state.passwordInput === '') {\r\n      this.setState({\r\n        passwordInputError: t!('login.passwordRequiredError')\r\n      })\r\n      error = true\r\n\r\n    }\r\n\r\n    if (!error) {\r\n      this.props.login!(\r\n        this.state.emailInput,\r\n        this.state.passwordInput\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Reneder component DOM\r\n   * \r\n   */\r\n  render() {\r\n    const { classes, loginWithOAuth, t, loginRequest } = this.props\r\n    const { emailInput } = this.state\r\n    const OAuthLogin = (\r\n      <div style={this.styles.singinOptions as any}>\r\n        <IconButton\r\n          onClick={() => loginWithOAuth!(OAuthType.FACEBOOK)}\r\n        ><div className='icon-fb icon'></div></IconButton>\r\n        <IconButton\r\n          onClick={() => loginWithOAuth!(OAuthType.GOOGLE)}\r\n        > <div className='icon-google icon'></div> </IconButton>\r\n        <IconButton\r\n          onClick={() => loginWithOAuth!(OAuthType.GITHUB)}\r\n        > <div className='icon-github icon'></div> </IconButton>\r\n\r\n      </div>\r\n    )\r\n    const loginRequestId = StringAPI.createServerRequestId(ServerRequestType.AuthLogin, emailInput)\r\n    const loginRequestStatus = loginRequest!.get(loginRequestId, { status: ServerRequestStatusType.NoAction }).status\r\n    const loading = loginRequestStatus === ServerRequestStatusType.Sent\r\n\r\n    return (\r\n      <form className={classes.paper}>\r\n        <div className={classes.root}>\r\n         \r\n          {config.settings.enabledOAuthLogin ? OAuthLogin : ''}\r\n          <Divider />\r\n          <TextField\r\n            className={classes.textField}\r\n            color='secondary'\r\n            autoFocus\r\n            onChange={this.handleInputChange}\r\n            helperText={this.state.emailInputError}\r\n            error={this.state.emailInputError.trim() !== ''}\r\n            name='emailInput'\r\n            label={t!('login.emailLabel')}\r\n            type='email'\r\n            tabIndex={1}\r\n          /><br />\r\n          <TextField\r\n            color='secondary'\r\n            className={classes.textField}\r\n            onChange={this.handleInputChange}\r\n            helperText={this.state.passwordInputError}\r\n            error={this.state.passwordInputError.trim() !== ''}\r\n            name='passwordInput'\r\n            label={t!('login.passwordLabel')}\r\n            type='password'\r\n            tabIndex={2}\r\n          />\r\n          <br />\r\n          <br />\r\n          <div className='login__button-box'>\r\n            <div className={classes.wrapperButton}>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                disabled={loading}\r\n                onClick={this.handleForm}\r\n                fullWidth\r\n                tabIndex={3}\r\n              >\r\n                {t!('login.loginButton')}\r\n              </Button>\r\n              {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n\r\n            </div>\r\n          </div>\r\n          <div className={classes.forgotRoot}>\r\n            <span className={classes.bottomPaper}><NavLink to='/resetPassword' className={classes.forgotText}>{t!('login.forgetPasswordMessage')}</NavLink></span>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.forgotRoot}>\r\n            <span className={classes.bottomPaper}>{t!('login.createAccountText')} <NavLink to='/signup' className={classes.link}>{t!('login.createAccountButton')}</NavLink></span>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Map dispatch to props\r\n */\r\nconst mapDispatchToProps = (dispatch: any, ownProps: ILoginComponentProps) => {\r\n  return {\r\n    login: (email: string, password: string) => {\r\n      dispatch(authorizeActions.dbLogin(email, password))\r\n    },\r\n    loginWithOAuth: (type: OAuthType) => dispatch(authorizeActions.dbLoginWithOAuth(type)),\r\n    signupPage: () => {\r\n      dispatch(push('/signup'))\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Map state to props\r\n */\r\nconst mapStateToProps = (state: Map<string, any>, ownProps: ILoginComponentProps) => {\r\n  const loginRequest = state.getIn(['server', 'request'], Map({}))\r\n  return {\r\n    loginRequest\r\n  }\r\n}\r\n\r\n// - Connect component to redux store\r\nconst translateWrapper = withTranslation('translations')(LoginComponent as any)\r\n\r\nexport default withRouter<any, any>(connect(mapStateToProps, mapDispatchToProps)(withStyles(loginStyles as any)(translateWrapper as any) as any))\r\n"]},"metadata":{},"sourceType":"module"}